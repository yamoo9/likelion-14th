// --------------------------------------------------------------------------
// üìå Ïò§Î•ò Ï≤òÎ¶¨
// --------------------------------------------------------------------------

// Î¨∏Ï†ú ÏÉÅÌô©
// response.json()Ïù¥ PromiseÎ•º Î∞òÌôòÌïòÍ∏∞ ÎïåÎ¨∏Ïóê
// throw new Error('Ïò§Î•ò Î©îÏãúÏßÄ ?????????')
// Promise.reject('Ïò§Î•ò Î©îÏãúÏßÄ ?????')
;(() => {
  
  fetch('https://api.github.com/user/repos')
    .then((response) => {
      // Îπ†Î•∏ Î∞òÌôò
      if (response.ok) return response.json()	

      // Ïò§Î•ò Ï≤òÎ¶¨ (response.json())

      // const errorResponse = response.json() // ÎπÑÎèôÍ∏∞ Ï≤òÎ¶¨ 
      // return Promise.reject(new Error(errorResponse))


      // Ïò§Î•ò Ï≤òÎ¶¨ (response.status)
      // let errorMessage = ''

      // switch(response.status) {
      //   case 400: errorMessage = 'Ïú†Ìö®ÌïòÏßÄ ÏïäÏùÄ ÏöîÏ≤≠ÏûÖÎãàÎã§.'; break
      //   case 401: errorMessage = 'Ïù∏Ï¶ùÏù¥ ÌïÑÏöîÌï©ÎãàÎã§.'; break
      //   case 404: errorMessage = 'Ìï¥Îãπ Î¶¨ÏÜåÏä§Î•º Ï∞æÏùÑ Ïàò ÏóÜÏäµÎãàÎã§.'; break
      // }
      
      // return Promise.reject(new Error(errorMessage))
    })
    // .then((validOrInvalidResolveValue) => {

    // })
    .catch((error) => {
      document.body.innerHTML = `<div role="alert">${error.message}</div>`
      // console.error('Ïò§Î•ò Î∞úÏÉù!', error)
    })

})

// Î¨∏Ï†ú Ìï¥Í≤∞ Î∞©Î≤ï
;(() => {
  fetch('https://api.github.com/user/repos')
    // ÎπÑÎèôÍ∏∞ ÏöîÏ≤≠ Í≤∞Í≥º Í≤ÄÌÜ†
    .then((response) => {

      // 1. response.ok Ï∞∏(resolve) ÎòêÎäî Í±∞Ïßì(reject)
      // 2. response.json() -> Promise -> .then((data)) -> Ïò§Î•ò Î©îÏãúÏßÄ = data.message

      return response.json().then((data) => {
        // ÎπÑÎèôÍ∏∞ ÏöîÏ≤≠ ÏÑ±Í≥µÌïú Í≤ΩÏö∞
        // Ïù¥Ìñâ(fulfilled)
        if (response.ok) return data

        // ÎπÑÎèôÍ∏∞ ÏöîÏ≤≠ Ïã§Ìå®Ìïú Í≤ΩÏö∞
        // Í±∞Ï†à(rejected)
        // Ïò§Î•ò Ï≤òÎ¶¨
        const errorMessage = data.message
        throw new Error(errorMessage) // Error { name, stack, message }
        // return Promise.reject(new Error(errorMessage))

        // console.log(data)
        // console.log(response.status)
        // console.log(response.ok)
        // return data
      })
    })
    // resolve Í∞íÏù¥Î©¥ then() ÏΩúÎ∞± Ïã§Ìñâ
    .then((data) => console.log('then - data', data))
    // reject Í∞íÏù¥Î©¥ catch() ÏΩúÎ∞± Ïã§Ìñâ
    .catch((error) => {
      // console.error('catch - error', error.message)

      const errorPrint = document.createElement('div')
      errorPrint.setAttribute('role', 'alert')
      errorPrint.style.cssText = `
        color: red;
        font-weight: 700;
        font-size: 2rem;
      `
      errorPrint.textContent = `Ïò§Î•ò Î∞úÏÉù! ${error.message}`
      document.querySelector('h1').after(errorPrint)

    })

})()